How to cross-build a port that can be used with  the mfsroot.

Note - these instructions have only been tested with the user-build described in README.user-build

Important - only some ports will build succesfully using this method.

Examples of ports that do build include: sysutils/less net-mgmt/libsmi net/libpcap net/tcpdump net/netcat net/rsync  
Examples of ports that FAIL to build include: wget curl screen

Reasons for build failure, include configure needing the host / cross compiler specified in configure instead
of the PATH, and/or configure needing to build and _run_ a test program as the host in the former state.

1. Install some ports. For example, using portsnap:

    cd path/to/directory/above/freebsd-wifi-build
    mkdir portsnap ports ports-build downloads
    portsnap -d portsnap fetch
    portsnap -d portsnap -p ports extract     # Only the first time
    portsnap -d portsnap -p ports extract     # Subsequent times

2. Ports that rely on libraries need to be built in the correct order.

3. Prepare port:

    PORT=sysutils/less    # <--- FOR EXAMPLE

    X_SELF_DIR=`pwd`
    SOURCES=path/to/freebsd-release-10.1.0    
    DOWNLOADS=${X_SELF_DIR}/ports-distfiles
    X_PORTS=${X_SELF_DIR}/ports
    X_PORTSBUILD=${X_SELF_DIR}/ports-build
    X_CROSSPATH=${X_SELF_DIR}/obj/mips/mips.mips/${SOURCES}/tmp/usr/bin

    # Depending on how you /home is arranged it may be necessary tio hack a symlink
    ln -sf ${X_SELF_DIR}/obj/mips/mips.mips/usr/home ${X_SELF_DIR}/obj/mips/mips.mips/home

    WORKING=`dirname $PORT`
    WORKING=`basename $WORKING`/`basename $PORT`
    
    ${X_FAKEROOT} make DISABLE_MAKE_JOBS=yes \
        PORTSDIR=${X_PORTS} \
        DISTDIR=${X_DOWNLOADS} \
        PORT_DBDIR=${X_PORTSBUILD}/db \
        WRKDIR=${X_PORTSBUILD}/w/${WORKING}/work \
        STAGEDIR=${X_PORTSBUILD}/staging \
        PREFIX=/target \
        NO_DEPENDS=1 NO_PKG_REGISTER=1 DB_FROM_SRC=1 BUILD_FLAGS=NO_CLEAN=1 \
        -DDISABLE_VULNERABILITIES \
          configure

4. Cross-build:

   This assumes that the previous buildworld stage was completed
   Note this stage requires fakeroot

    PATH=${X_CROSSPATH}:${PATH} fake make DISABLE_MAKE_JOBS=yes \
        PORTSDIR=${X_PORTS} \
        DISTDIR=${X_DOWNLOADS} \
        PORT_DBDIR=${X_PORTSBUILD}/db \
        WRKDIR=${X_PORTSBUILD}/w/${WORKING}/work \
        STAGEDIR=${X_PORTSBUILD}/staging \
        PREFIX=/target \
        NO_DEPENDS=1 NO_PKG_REGISTER=1 DB_FROM_SRC=1 BUILD_FLAGS=NO_CLEAN=1 \
        -DDISABLE_VULNERABILITIES \
          install

5. Copy files into the mfsroot. Do this before building the flash.

    X_FROM=${X_PORTSBUILD}/staging/target
    
    ${INSTALL_PROG} ${X_FROM}/bin/less ${X_STAGING_FSROOT}/bin/

    # Note, less needs ncurses from the buildworld

    X_DESTDIR=${X_SELF_DIR}/root/mips             # <-- depends on the target
    
    ${INSTALL_PROG} ${X_DESTDIR}/lib/libncurses.so* ${X_STAGING_FSROOT}/lib/
    ${INSTALL_PROG} ${X_DESTDIR}/usr/bin/vi ${X_STAGING_FSROOT}/usr/bin/

For a working example, see https://github.com/pastcompute/carambola2-freebsd-userbuild/raw/master/build_carambola.sh


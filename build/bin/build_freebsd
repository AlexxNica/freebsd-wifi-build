#!/bin/sh

#
# This is a simple wrapper around the FreeBSD build framework
# to automate building and installing the base system.

# It takes care of setting the target arch flags, setting the
# kernel configuration filename, destination directory, and
# adding whichever local directories will also be built.

# The script is desigend to be run inside a src directory.

# In addition, it (helpfully!) sets the root and obj dirs
# in a directory above the current (src) directory.

# To facilitate building multiple kernel configurations
# for the same architecture, BUILDNAME determines what the
# obj and root directory will be named. Multiple platforms
# using the same architecture (but different kernels)
# can thus just use the same BUILDNAME.

# Finally, this is designed to be used for building FreeBSD-HEAD
# after Warner's "tbemd" build framework changes.

SCRIPT_NAME="`basename $0`"
SCRIPT_DIR="`dirname $0`"
CUR_DIR="`pwd`"

CFGNAME=$1
shift

. ${SCRIPT_DIR}/../cfg/${CFGNAME} || exit 1

# include the config variable generation code
. ${SCRIPT_DIR}/../lib/cfg.sh || exit 1

echo "MAKEOBJDIRPREFIX: ${X_MAKEOBJDIRPREFIX}"

mkdir -p ${X_MAKEOBJDIRPREFIX} || exit 1
mkdir -p ${X_DESTDIR} || exit 1

# Only set TARGET_CPUTYPE if it's actually set
X_TARGET_CPUTYPE=""
if [ "x${TARGET_CPUTYPE}" != "x" ]; then
    X_TARGET_CPUTYPE="TARGET_CPUTYPE=${TARGET_CPUTYPE}"
fi

# Create a make.conf
echo "MALLOC_PRODUCTION=" > ${X_DESTDIR}/../make.conf.${BUILDNAME}

while [ "x$1" != "x" ]; do
	if [ "$1" = "installworld" ]; then
		mkdir -p ${X_DESTDIR}/usr/local/bin/
		mkdir -p ${X_DESTDIR}/bsdbox/
		mkdir -p ${X_DESTDIR}/usr/local/libdata/athprom/
	fi
	if [ "$1" = "installkernel" ]; then
		mkdir -p ${X_DESTDIR}/boot/kernel.${KERNCONF}/
	fi
	if [ "$1" = "buildenv" ]; then
		echo "*** Overriding BUILD_FLAGS to '' so 'buildenv' works!"
		BUILD_FLAGS=""
	fi
	env CROSS_BUILD_TESTING=YES				\
	    MAKEOBJDIRPREFIX=${X_MAKEOBJDIRPREFIX}		\
	    make ${BUILD_FLAGS} TARGET=${TARGET}		\
	    TARGET_ARCH=${TARGET_ARCH}	 ${X_TARGET_CPUTYPE}	\
	    KERNCONF=${KERNCONF} DESTDIR=${X_DESTDIR}		\
	    KODIR=/boot/kernel.${KERNCONF}/			\
	    KMODDIR=/boot/kernel.${KERNCONF}/			\
	    __MAKE_CONF=${X_DESTDIR}/../make.conf.${BUILDNAME}	\
	    SRCCONF=/dev/null					\
	    LOCAL_DIRS="${LOCAL_DIRS}"				\
	    $1							\
	|| exit 1
	if [ "$1" = "installkernel" ]; then
		echo "*** Copying kernel to /tftpboot/kernel.${KERNCONF}"
		cp ${X_KERNEL} /tftpboot/kernel.${KERNCONF}
		cp ${X_KERNEL}.symbols /tftpboot/kernel.${KERNCONF}.symbols
	fi
	shift
done

#	    __MAKE_CONF=/dev/null						\
#	    SRCCONF=${X_DESTDIR}/../src.conf.${BUILDNAME}			\
